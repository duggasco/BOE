version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: boe-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:8000/api/v1
    depends_on:
      - backend
    stdin_open: true
    tty: true
    networks:
      - boe-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boe-backend
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://boe_user:boe_password@postgres:5432/boe_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=development-secret-key-change-in-production
      - DEBUG=true
      - AUTO_CREATE_TABLES=true
    depends_on:
      - postgres
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - boe-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: boe-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=boe_user
      - POSTGRES_PASSWORD=boe_password
      - POSTGRES_DB=boe_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - boe-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: boe-redis
    ports:
      - "6379:6379"
    networks:
      - boe-network

  # Celery Worker (for background tasks)
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boe-celery-worker
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://boe_user:boe_password@postgres:5432/boe_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - postgres
    command: celery -A app.celery worker --loglevel=info
    networks:
      - boe-network

  # Celery Beat (for scheduled tasks)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boe-celery-beat
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://boe_user:boe_password@postgres:5432/boe_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - postgres
    command: celery -A app.celery beat --loglevel=info
    networks:
      - boe-network

  # Flower (Celery monitoring)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boe-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
    command: celery -A app.celery flower
    networks:
      - boe-network

networks:
  boe-network:
    driver: bridge

volumes:
  postgres_data: